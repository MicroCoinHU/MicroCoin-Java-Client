/**
 * MicroCoin
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package Model;

import Model.ChangeKeyRequest;
import Model.Signature;
import Model.SimpleKey;
import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ChangeKey {
  
  @SerializedName("accountNumber")
  private String accountNumber = null;
  @SerializedName("newOwnerPublicKey")
  private SimpleKey newOwnerPublicKey = null;
  @SerializedName("signature")
  private Signature signature = null;
  @SerializedName("hash")
  private String hash = null;
  @SerializedName("fee")
  private BigDecimal fee = null;

  /**
   * The account number of the account
   **/
  @ApiModelProperty(required = true, value = "The account number of the account")
  public String getAccountNumber() {
    return accountNumber;
  }
  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public SimpleKey getNewOwnerPublicKey() {
    return newOwnerPublicKey;
  }
  public void setNewOwnerPublicKey(SimpleKey newOwnerPublicKey) {
    this.newOwnerPublicKey = newOwnerPublicKey;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Signature getSignature() {
    return signature;
  }
  public void setSignature(Signature signature) {
    this.signature = signature;
  }

  /**
   * The transaction hash for signature generation. Filled by the API 
   **/
  @ApiModelProperty(value = "The transaction hash for signature generation. Filled by the API ")
  public String getHash() {
    return hash;
  }
  public void setHash(String hash) {
    this.hash = hash;
  }

  /**
   * Transaction fee, if any, otherwise zero
   **/
  @ApiModelProperty(required = true, value = "Transaction fee, if any, otherwise zero")
  public BigDecimal getFee() {
    return fee;
  }
  public void setFee(BigDecimal fee) {
    this.fee = fee;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangeKey changeKey = (ChangeKey) o;
    return (this.accountNumber == null ? changeKey.accountNumber == null : this.accountNumber.equals(changeKey.accountNumber)) &&
        (this.newOwnerPublicKey == null ? changeKey.newOwnerPublicKey == null : this.newOwnerPublicKey.equals(changeKey.newOwnerPublicKey)) &&
        (this.signature == null ? changeKey.signature == null : this.signature.equals(changeKey.signature)) &&
        (this.hash == null ? changeKey.hash == null : this.hash.equals(changeKey.hash)) &&
        (this.fee == null ? changeKey.fee == null : this.fee.equals(changeKey.fee));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.accountNumber == null ? 0: this.accountNumber.hashCode());
    result = 31 * result + (this.newOwnerPublicKey == null ? 0: this.newOwnerPublicKey.hashCode());
    result = 31 * result + (this.signature == null ? 0: this.signature.hashCode());
    result = 31 * result + (this.hash == null ? 0: this.hash.hashCode());
    result = 31 * result + (this.fee == null ? 0: this.fee.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangeKey {\n");
    
    sb.append("  accountNumber: ").append(accountNumber).append("\n");
    sb.append("  newOwnerPublicKey: ").append(newOwnerPublicKey).append("\n");
    sb.append("  signature: ").append(signature).append("\n");
    sb.append("  hash: ").append(hash).append("\n");
    sb.append("  fee: ").append(fee).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

/**
 * MicroCoin
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package Model;

import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * MicroCoin account entity
 **/
@ApiModel(description = "MicroCoin account entity")
public class Account {
  
  @SerializedName("accountNumber")
  private String accountNumber = null;
  @SerializedName("balance")
  private BigDecimal balance = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("type")
  private Integer type = null;
  @SerializedName("status")
  private String status = null;
  @SerializedName("price")
  private BigDecimal price = null;

  /**
   * Account number
   **/
  @ApiModelProperty(required = true, value = "Account number")
  public String getAccountNumber() {
    return accountNumber;
  }
  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  /**
   * Account balance
   **/
  @ApiModelProperty(required = true, value = "Account balance")
  public BigDecimal getBalance() {
    return balance;
  }
  public void setBalance(BigDecimal balance) {
    this.balance = balance;
  }

  /**
   * Account name
   **/
  @ApiModelProperty(value = "Account name")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Account type
   **/
  @ApiModelProperty(required = true, value = "Account type")
  public Integer getType() {
    return type;
  }
  public void setType(Integer type) {
    this.type = type;
  }

  /**
   * Account status Listed = for sale Normal = normal account
   **/
  @ApiModelProperty(value = "Account status Listed = for sale Normal = normal account")
  public String getStatus() {
    return status;
  }
  public void setStatus(String status) {
    this.status = status;
  }

  /**
   * Account price if account for sale
   **/
  @ApiModelProperty(required = true, value = "Account price if account for sale")
  public BigDecimal getPrice() {
    return price;
  }
  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return (this.accountNumber == null ? account.accountNumber == null : this.accountNumber.equals(account.accountNumber)) &&
        (this.balance == null ? account.balance == null : this.balance.equals(account.balance)) &&
        (this.name == null ? account.name == null : this.name.equals(account.name)) &&
        (this.type == null ? account.type == null : this.type.equals(account.type)) &&
        (this.status == null ? account.status == null : this.status.equals(account.status)) &&
        (this.price == null ? account.price == null : this.price.equals(account.price));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.accountNumber == null ? 0: this.accountNumber.hashCode());
    result = 31 * result + (this.balance == null ? 0: this.balance.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    
    sb.append("  accountNumber: ").append(accountNumber).append("\n");
    sb.append("  balance: ").append(balance).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  price: ").append(price).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
